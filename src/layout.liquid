<!DOCTYPE html>
<html lang="zh">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Templiq - Liquid模板引擎</title>
  <meta name="description" content="Templiq - 简单易用的Liquid模板引擎示例">
  <!-- Bootstrap 3 CSS -->
  <link rel="stylesheet" href="/bootstrap.min.css">
  <link rel="stylesheet" href="/bootstrap-theme.min.css">
  <!-- Bootstrap 3 JavaScript -->
  <script src="/jquery.min.js"></script>
  <script src="/bootstrap.min.js"></script>
  <!-- html2canvas -->
  <script src="/html2canvas.min.js"></script>
</head>
<body>
  <main class="content">
      {{ content }}
  </main>
  {% if isPreview %}
  <div style="position: fixed;right: 0;top: 0;z-index: 1000;">
    <p><button id="savePreview" class="btn btn-primary">保存缩略图</button></p>
    <p><a href="/download/{{templateName}}" class="btn btn-primary">下载</a></p>
  </div>
  <script>
    document.getElementById('savePreview').addEventListener('click', async function() {
      const content = document.querySelector('main.content');
      const templateName = '{{templateName}}';
      
      const images = content.getElementsByTagName('img');
      const imagePromises = Array.from(images).map(img => {
        if (img.complete) return Promise.resolve();
        return new Promise((resolve, reject) => {
          img.onload = resolve;
          img.onerror = reject;
        });
      });
      
      try {
        await Promise.all(imagePromises);
        const canvas = await html2canvas(content, {
          useCORS: true,
          allowTaint: true
        });
        
        const maxWidth = 800; 
        const scale = Math.min(1, maxWidth / canvas.width);
        const scaledWidth = canvas.width * scale;
        const scaledHeight = canvas.height * scale;
        
        const scaledCanvas = document.createElement('canvas');
        scaledCanvas.width = scaledWidth;
        scaledCanvas.height = scaledHeight;
        const ctx = scaledCanvas.getContext('2d');
        ctx.drawImage(canvas, 0, 0, scaledWidth, scaledHeight);
        
        const imageData = scaledCanvas.toDataURL('image/png', 0.8); // 使用0.8的质量压缩
        fetch('/api/save-preview', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ imageData, templateName })
        })
        .then(response => response.json())
        .then(data => {
          if(data.success) {
            alert('缩略图保存成功！');
          } else {
            alert('保存失败：' + data.error);
          }
        })
        .catch(error => {
          alert('保存失败：' + error.message);
        });
      }catch(error) {
        console.error('Error capturing preview:', error);
      }
    });
  </script>
  {% endif %}
</body>
</html>