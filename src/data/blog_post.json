{
  "blog": {
    "title": "Templiq 技术博客",
    "url": "/blog"
  },
  "post": {
    "title": "使用 Liquid 模板引擎构建现代网站",
    "author": {
      "name": "张小明",
      "avatar": "https://images.unsplash.com/photo-1535713875002-d1d0cf377fde?auto=format&fit=crop&w=150&q=80",
      "bio": "前端开发工程师，热爱探索新技术和分享知识。"
    },
    "published_at": "2023-09-15T08:30:00Z",
    "reading_time": 8,
    "tags": ["技术", "前端开发", "Liquid", "模板引擎"],
    "featured_image": "https://images.unsplash.com/photo-1517694712202-14dd9538aa97?auto=format&fit=crop&w=1200&q=80",
    "content": "<p>Liquid 是一种灵活、安全的模板语言，由 Shopify 创建并用于其电子商务平台。随着静态网站生成器和无头 CMS 的兴起，Liquid 的应用场景正在不断扩大。本文将探讨如何利用 Liquid 模板引擎构建现代化的网站。</p><h2>Liquid 的基础知识</h2><p>Liquid 使用双大括号 <code>{{ }}</code> 来输出内容，使用大括号配合百分号 <code>{% %}</code> 来执行逻辑和控制流。这种简洁明了的语法让开发者能够快速上手并进行开发。</p><blockquote>Liquid 的设计哲学是将展示层与业务逻辑分离，这与现代前端开发的最佳实践不谋而合。</blockquote><h2>Liquid 的主要特性</h2><p>以下是 Liquid 的一些重要特性：</p><ul><li><strong>对象</strong>：使用双大括号包裹，用于显示内容</li><li><strong>标签</strong>：用于控制模板的逻辑流程</li><li><strong>过滤器</strong>：用于修改对象的输出结果</li></ul><h2>代码示例</h2><p>下面是一个简单的产品列表示例：</p><pre><code>{% for product in collection.products %}\n  &lt;div class=\"product\"&gt;\n    &lt;h2&gt;{{ product.title }}&lt;/h2&gt;\n    &lt;p&gt;{{ product.description | truncate: 100 }}&lt;/p&gt;\n    &lt;p class=\"price\"&gt;{{ product.price | money }}&lt;/p&gt;\n  &lt;/div&gt;\n{% endfor %}</code></pre><p>在这个例子中，我们遍历了 <code>collection.products</code> 集合，并为每个产品生成了 HTML 结构。我们还使用了 <code>truncate</code> 和 <code>money</code> 过滤器来格式化输出。</p><h2>高级技巧</h2><p>随着项目复杂度的增加，你可能需要使用一些高级技巧来优化你的 Liquid 模板：</p><h3>1. 使用包含文件</h3><p>通过 <code>include</code> 标签，你可以将常用的模板片段抽取出来，以便重用：</p><pre><code>{% include 'product-card', product: product %}</code></pre><h3>2. 使用自定义过滤器</h3><p>如果内置的过滤器无法满足你的需求，你可以创建自定义过滤器来扩展 Liquid 的功能。</p><h3>3. 性能优化</h3><p>对于大型网站，性能是一个重要考虑因素。你可以通过缓存、减少循环嵌套和避免复杂计算来优化 Liquid 模板的性能。</p><h2>总结</h2><p>Liquid 模板引擎因其简单性和灵活性而受到开发者的喜爱。通过本文介绍的基础知识和高级技巧，你应该能够开始使用 Liquid 构建现代化的网站了。</p><p>随着 JAMstack 架构的普及，Liquid 这样的模板引擎正变得越来越重要。学习掌握它将为你的前端开发技能库增添一个强大的工具。</p>",
    "comments": [
      {
        "author": "李明",
        "date": "2023-09-15T10:45:00Z",
        "content": "非常详细的教程！我一直在寻找关于 Liquid 的深入解析，这篇文章正好满足了我的需求。期待更多相关内容！"
      },
      {
        "author": "赵静",
        "date": "2023-09-15T14:22:00Z",
        "content": "我有个问题，Liquid 相比于其他模板引擎（如 Handlebars 或 Mustache）有什么优势？"
      },
      {
        "author": "张小明",
        "date": "2023-09-15T16:30:00Z",
        "content": "@赵静 Liquid 的主要优势在于它的安全性和灵活性。它限制了模板可以执行的操作，这使得它非常适合在允许第三方编辑模板的环境中使用（如 Shopify）。此外，它还提供了丰富的过滤器和标签，同时保持了语法的简洁。"
      }
    ]
  },
  "related_posts": [
    {
      "title": "深入理解 Liquid 过滤器",
      "url": "/blog/understanding-liquid-filters",
      "excerpt": "Liquid 过滤器是模板开发中的强大工具。本文深入探讨了常用过滤器的使用场景和高级应用，帮助你充分发挥 Liquid 的潜力。"
    },
    {
      "title": "Liquid vs. JSX：模板引擎的对比",
      "url": "/blog/liquid-vs-jsx",
      "excerpt": "在前端开发领域，模板引擎的选择至关重要。本文对比了 Liquid 和 JSX 两种流行的模板方案，分析它们的优缺点和适用场景。"
    },
    {
      "title": "使用 Liquid 构建电子商务网站",
      "url": "/blog/liquid-for-ecommerce",
      "excerpt": "电子商务网站有其特殊的需求和挑战。本文介绍了如何利用 Liquid 的特性来构建功能丰富、性能优异的电子商务前端。"
    }
  ]
} 